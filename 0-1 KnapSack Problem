import java.util.*;
public class Solution{
    static int knapsack(int[] weight, int[] value, int n, int mwt) {

            /* Your class should be named Solution
            * Don't write main().
            * Don't read input, it is passed as function argument.
            * Change in the given tree itself.
            * No need to return or print the output.
            * Taking input and printing output is handled automatically.
            */                                                                                            // Tabulation approach done easy: Keep looking for variables as
        int[][] dp = new int[n][mwt+1];                                                                   //mistakes are been made there
        for(int[] row : dp)
            Arrays.fill(row,0);
        for(int i=weight[0]; i<=mwt;i++)
            dp[0][i] = value[0];
        
        for(int ind = 1; ind<n; ind++){
            for(int wgt = 0; wgt<=mwt; wgt++)
            {
                int notTake= 0+ dp[ind-1][wgt];
                int Take = Integer.MIN_VALUE;
                if(weight[ind]<= wgt)
                    Take = value[ind]+ dp[ind-1][wgt-weight[ind]];
                dp[ind][wgt] = Math.max(Take, notTake);
            }
        }
            return dp[n-1][mwt];
    }
}
