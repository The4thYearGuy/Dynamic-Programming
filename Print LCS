mport java.util.*;
class LCSprint {
    public static void main (String[] args){
        String a = "abcde";
        String c = "bdgek";
        largestCommonSubsequence(a,c);
        // System.out.println(b);
    }   
    public static String largestCommonSubsequence(String text1, String text2) {
        int m = text1.length();
        int n = text2.length();
        
        int[][] dp = new int[m+1][n+1];
        
        for(int i= 0; i<=m ; i++)
            dp[i][0] = 0;
        
        for(int j=0; j<=n; j++)
            dp[0][j] =0;
        
        for(int i =1;i<=m; i++){
            for(int j = 1; j<=n; j++){
                //if(i<0 || j<0) return 0;
                if(text1.charAt(i-1) == text2.charAt(j-1))
                    dp[i][j] = 1 + dp[i-1][j-1];
                else
                    dp[i][j] = 0 + Math.max(dp[i-1][j] , dp[i][j-1]);
            }
        }
       //eturn dp[m][n];
        
        int len= dp[m][n];
        String ans = "";
        // int index = len-1;
        int i = m-1;
        int j =  n-1;
        while(i+1>0 && j+1>0){
            if(text1.charAt(i) == text2.charAt(j)){
                ans = text1.charAt(i)  +  ans;
                i--;j--;
            }
            else if(dp[i][j+1]> dp[i+1][j])
                i--;
            else
                j--;
        }
        System.out.println(ans);    
        return ans; 
    }
}
