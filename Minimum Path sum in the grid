class Solution {
    public int minPathSum(int[][] a) {
        int m = a.length;
        int n = a[0].length;
        int min = 0;                                                          // Find the sum of the shortest path from (0,0) to (m-1,n-1)
        int[][] dp = new int[m][n];
        
        for(int[] row : dp)
            Arrays.fill(row,-1);
        
         for(int i = 0; i<m; i++){
            for(int j =0; j<n;j++){
                if(dp[i][j] != -1) return dp[i][j];
                else if(i == 0 && j==0) dp[i][j] = a[i][j];
                else{
                    int up =a[i][j];
                    if(i>0)up += dp[i-1][j];
                    else up += 1e9;
                    int left =a[i][j];
                    if(j>0)left += dp[i][j-1];
                    else left += 1e9;
                    dp[i][j]= Math.min(up, left);                       // get the both paths and then check for min
                }
            
            }
        }   
        return dp[m-1][n-1];
    }
}
